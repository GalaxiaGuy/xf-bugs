using Foundation;
using UIKit;

namespace AkamaiBMPiOS310
{
	// @protocol CYFChallengeActionDelegate <NSObject>
	[Protocol, Model(AutoGeneratedName = true)]
	[BaseType(typeof(NSObject))]
	interface CYFChallengeActionDelegate
	{
		// @required -(void)onChallengeActionSuccess;
		[Abstract]
		[Export("onChallengeActionSuccess")]
		void OnChallengeActionSuccess();

		// @optional -(void)onChallengeActionCancel;
		[Export("onChallengeActionCancel")]
		void OnChallengeActionCancel();

		// @optional -(void)onChallengeActionFailure:(NSString *)message;
		[Export("onChallengeActionFailure:")]
		void OnChallengeActionFailure(string message);
	}

	// @interface CYFMonitor : NSObject
	[BaseType(typeof(NSObject))]
	interface CYFMonitor
	{
		// +(void)configure;
		[Static]
		[Export("configure")]
		void Configure();

		// +(void)configureWithUrl:(NSString *)baseUrl;
		[Static]
		[Export("configureWithUrl:")]
		void ConfigureWithUrl(string baseUrl);

		// +(void)configureChallengeAction:(NSString *)baseUrl;
		[Static]
		[Export("configureChallengeAction:")]
		void ConfigureChallengeAction(string baseUrl);

		// +(BOOL)showChallengeAction:(NSString *)context title:(NSString *)title message:(NSString *)message cancelButtonTitle:(NSString *)cancelButtonTitle delegate:(id<CYFChallengeActionDelegate>)delegate;
		[Static]
		[Export("showChallengeAction:title:message:cancelButtonTitle:delegate:")]
		bool ShowChallengeAction(string context, string title, string message, string cancelButtonTitle, CYFChallengeActionDelegate @delegate);

		// +(NSString *)getSensorData;
		[Static]
		[Export("getSensorData")]
		string SensorData { get; }

		// +(void)startCollectingTouchEventsOnWindow:(UIWindow *)window;
		[Static]
		[Export("startCollectingTouchEventsOnWindow:")]
		void StartCollectingTouchEventsOnWindow(UIWindow window);

		// +(NSString *)getVersion;
		[Static]
		[Export("getVersion")]
		string Version { get; }

		// +(void)setLogLevel:(CYFLogLevel)logLevel;
		[Static]
		[Export("setLogLevel:")]
		void SetLogLevel(CYFLogLevel logLevel);
	}
}